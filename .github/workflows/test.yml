name: "Test"

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    name: "Terratest"
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.3.0
          terraform_wrapper: false

      - name: Cache Terraform providers
        uses: actions/cache@v4
        with:
          path: ~/.terraform.d/plugin-cache
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Setup Terraform plugin cache
        run: |
          mkdir -p ~/.terraform.d/plugin-cache
          echo 'plugin_cache_dir = "~/.terraform.d/plugin-cache"' > ~/.terraformrc
          echo "âœ… Plugin cache directory created: $(ls -la ~/.terraform.d/)"

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true
          cache-dependency-path: test/go.sum

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Clean up test fixture caches
        run: |
          echo "ðŸ§¹ Cleaning up Terraform cache files from test fixtures..."
          find test/fixtures -name ".terraform" -type d -exec rm -rf {} + 2>/dev/null || true
          find test/fixtures -name ".terraform.lock.hcl" -delete 2>/dev/null || true
          echo "âœ… Terraform cache cleanup completed"
          echo "ðŸ“‚ Current test fixture structure:"
          find test/fixtures -type f -name "*.tf" | head -10

      - name: Run go tests and generate report
        working-directory: ./test
        run: |
          go test -v -timeout 30m 2>&1 | tee /tmp/test-output.log
          go install github.com/jstemmer/go-junit-report/v2@latest
          cat /tmp/test-output.log | go-junit-report > report.xml

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: ./test/report.xml
